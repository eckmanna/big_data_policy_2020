# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
summary(df_test)
tabl <- "
| Year    | Female support | Male support | Total support |
|---------|----------------|--------------|---------------|
| 2006    | 0.733          | 0.737        | 0.735         |
| 2011    | 0.642          | 0.696        | 0.668         |
| t-value | 3.64           | 1.57         | 3.74          |
| p-value | 0.0003         | 0.1162       | 0.0002        |
"
cat(tabl)
rm(list=ls())
# Load relevant packages
library(tidyverse)
library(haven)
library(estimatr)
library(readxl)
library(plm)
library(stargazer)
library(Synth)
library(AER)
library(RCurl)
library(openxlsx)
# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
summary(df_test)
# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
summary(data)
tabl <- "
| Variable    | Description | Unit |
|---------|----------------|--------------|
| Jahr    |           |         |
| Bundesland    |           |         |
| Installed_Cap_pc |            |          |
| p-value |          |        |
"
cat(tabl)
rm(list=ls())
# Load relevant packages
library(tidyverse)
library(haven)
library(estimatr)
library(readxl)
library(plm)
library(stargazer)
library(Synth)
library(AER)
library(RCurl)
library(openxlsx)
# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
summary(data)
tabl <- "
| Variable             | Description                                 | Unit       |
|----------------------|---------------------------------------------|------------|
| Jahr                 | Year                                        | -          |
| Bundesland           | State                                       | -          |
| Installed_Cap        | Installed PV Capacity                       | kW         |
| Cum_Installed_cap    | Cumulative installed PV Capacity            | kW         |
| module_cost          | Avg. cost per PV module                     | €2016/Wp   |
| feed-in              | National feed-in Tariff                     | ct/kWh     |
| population           | Population of state                         | people     |
| area                 | Area of state                               | km2        |
| GDP                  | GDP of state                                | m€         |
| Installed_Cap_pa     | Installed PV Capacity per area              | kW/km2     |
| Cum_Installed_Cap_pa | Cumulative installed PV Capacity per area   | kW/km2     |
| Installed_Cap_pc     | Installed PV Capacity per capita            | kW/cap     |
| Cum_Installed_Cap_pc | Cumulative installed PV Capacity per capita | kW/cap     |
| GDP_pc               | GDP per capita (of state)                   | €/cap      |
"
cat(tabl)
#Overwiev
str(data)
summary(data)
dim(data)
data[1:16]
#Overwiev
str(data)
dim(data)
data[1:16,1:4]
#Overwiev
str(data)
dim(data)
data[1:16,1:8]
#Overwiev
str(data)
dim(data)
data[1:16,1:4]
View(data)
#missing data of year 2020 -> filter
data = data %>%
filter(Jahr < 2020)
attach(data)
#Overwiev
str(data)
dim(data)
data[1:16,1:4]
View(data)
summary(Installed_Cap)
boxplot(Installed_Cap)
summary(cum_installed_cap)
boxplot(cum_installed_cap)
ggplot(data = data) +
geom_line(mapping = aes(x = Jahr, y = Installed_Cap, linetype = Bundesland, color= Bundesland),
show.legend = TRUE)
ggplot(data = data) +
geom_line(mapping = aes(x = Jahr, y = cum_installed_cap, linetype = Bundesland, color= Bundesland),
show.legend = TRUE)
ggplot(data = data) +
geom_line(mapping = aes(x = Jahr, y = cum_installed_cap_pc, linetype = Bundesland, color= Bundesland),
show.legend = TRUE)
ggplot(data = data) +
geom_line(mapping = aes(x = Jahr, y = cum_installed_cap_pa, linetype = Bundesland, color= Bundesland),
show.legend = TRUE)
hist(Installed_Cap_pc)
summary(Installed_Cap_pc)
hist(Installed_Cap)
hist(Installed_Cap_pa)
hist(Installed_Cap_pc)
model_ols = lm(Installed_Cap_pc ~ `feed-in`)
coeftest(model_ols)
View(data)
plot(`feed-in`, Installed_Cap_pc, col="blue", xlab = "feed-in", ylab="Installed_cap_pc [W/1000cap]")
abline(model_ols, col=3, lwd=3)
plot(`feed-in`, Installed_Cap_pc, col="blue", xlab = "feed-in", ylab="Installed_cap_pc [kW/cap]")
abline(model_ols, col=3, lwd=3)
Installed_Cap_pc_predict_ols = predict(model_ols)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_ols, color = Bundesland),
show.legend = FALSE)
model_state = lm(Installed_Cap_pc ~ `feed-in` + Bundesland)
summary(model_state)
model_state = lm(Installed_Cap_pc ~ `feed-in` + Bundesland + module_cost)
summary(model_state)
model_state = lm(Installed_Cap_pc ~ `feed-in` + Bundesland)
summary(model_state)
Installed_Cap_pc_predict_state = predict(model_state)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_state, color = Bundesland),
show.legend = TRUE)
data %>%
group_by(ENH_Bundesland, Jahr) %>%
summarize(mean_Installed_Cap_pc = mean(Installed_Cap_pc)) %>%
ggplot(aes(x = Jahr, y = mean_Installed_Cap_pc,
group = Bundesland, colour = Bundesland)) +
geom_point() +
geom_line() +
xlab("Year") + ylab("Mean fatality") +
scale_colour_viridis_d("State", end = 0.7)
data %>%
group_by(Bundesland, Jahr) %>%
summarize(mean_Installed_Cap_pc = mean(Installed_Cap_pc)) %>%
ggplot(aes(x = Jahr, y = mean_Installed_Cap_pc,
group = Bundesland, colour = Bundesland)) +
geom_point() +
geom_line() +
xlab("Year") + ylab("Mean fatality") +
scale_colour_viridis_d("State", end = 0.7)
model_fe = plm(Installed_Cap_pc ~ `feed-in`,
data = data,
index = c("Bundesland", "Jahr"),
model = "within") #within = fixed effects
summary(model_fe)
Installed_Cap_pc_predict_fe = predict(model_fe)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_fe, color = Bundesland),
show.legend = TRUE)
coeftest(model_fe, vcov. = vcovHC, type = "HC1")
rob_se <- list(sqrt(diag(vcovHC(model_ols, type = "HC1"))),
sqrt(diag(vcovHC(model_state, type = "HC1"))),
sqrt(diag(vcovHC(model_fe, type = "HC1"))))
stargazer(model_ols, model_state, model_fe,
digits = 3,
type = "text",
keep=c("beertax"),
out="myfile",
out.header=FALSE,
header = FALSE,
se = rob_se,
model.numbers = FALSE,
column.labels = c("OLS", "with state dummies", "FE model"))
rob_se <- list(sqrt(diag(vcovHC(model_ols, type = "HC1"))),
sqrt(diag(vcovHC(model_state, type = "HC1"))),
sqrt(diag(vcovHC(model_fe, type = "HC1"))))
stargazer(model_ols, model_state, model_fe,
digits = 3,
type = "text",
keep=c("feed-in"),
out="myfile",
out.header=FALSE,
header = FALSE,
se = rob_se,
model.numbers = FALSE,
column.labels = c("OLS", "with state dummies", "FE model"))
pFtest(model_fe, model_ols)
#If the p-value is < 0.05 then use fixed effects
model_year = lm(Installed_Cap_pc ~ `feed-in` + as.factor(Jahr))
summary(model_year)
# estimate the state and year fixed effects regression with plm()
model_plm = plm(Installed_Cap_pc ~ `feed-in`,
data = data,
index = c("Bundesland", "Jahr"),
model = "within",
effect = "twoways")
summary(model_plm)
Installed_Cap_pc_predict_plm = predict(model_plm)
ggplot(data = data2) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_plm, color = Bundesland),
show.legend = TRUE)
Installed_Cap_pc_predict_plm = predict(model_plm)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_plm, color = Bundesland),
show.legend = TRUE)
model_state_year = lm(Installed_Cap_pc ~ `feed-in` + as.factor(Bundesland) + as.factor(Jahr))
summary(model_state_year)
Installed_Cap_pc_predict_state_year = predict(model_state_year)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_state_year, color = Bundesland),
show.legend = TRUE)
model_state_year_2 = plm(Installed_Cap_pc ~ `feed-in`+as.factor(Jahr),
data = data,
index = c("Bundesland", "Jahr"),
model = "within") #within = fixed effects
summary(model_state_year_2)
library(RCurl)
rm(list=ls())
# Load relevant packages
library(tidyverse)
library(haven)
library(estimatr)
library(readxl)
library(plm)
library(stargazer)
library(Synth)
library(AER)
library(RCurl)
library(openxlsx)
rm(list=ls())
# Load relevant packages
library(tidyverse)
library(haven)
library(estimatr)
library(readxl)
library(plm)
library(stargazer)
library(Synth)
library(AER)
library(RCurl)
library(openxlsx)
# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
summary(data)
rm(list=ls())
# Load relevant packages
library(tidyverse)
library(haven)
library(estimatr)
library(readxl)
library(plm)
library(stargazer)
library(Synth)
library(AER)
library(RCurl)
library(openxlsx)
# Read data from the computer (local)
data = read_excel("C:/Users/Andi Eckmann/Desktop/ETH Studium/MASTERSTUDIUM/2. Semester/Big Data for Public Policy/big_data_policy_2020/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx")
# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
summary(data)
tabl <- "
| Variable             | Description                                 | Unit       |
|----------------------|---------------------------------------------|------------|
| Jahr                 | Year                                        | -          |
| Bundesland           | State                                       | -          |
| Installed_Cap        | Installed PV Capacity                       | kW         |
| Cum_Installed_cap    | Cumulative installed PV Capacity            | kW         |
| module_cost          | Avg. cost per PV module                     | €2016/Wp   |
| feed-in              | National feed-in Tariff                     | ct/kWh     |
| population           | Population of state                         | people     |
| area                 | Area of state                               | km2        |
| log_area             | LOG Area of state                           | -          |
| GDP                  | GDP of state                                | m€         |
| Installed_Cap_pa     | Installed PV Capacity per area              | kW/km2     |
| Cum_Installed_Cap_pa | Cumulative installed PV Capacity per area   | kW/km2     |
| Installed_Cap_pc     | Installed PV Capacity per capita            | kW/cap     |
| Cum_Installed_Cap_pc | Cumulative installed PV Capacity per capita | kW/cap     |
| pop_densityed_Cap_pc | Population density                          | cap/km2    |
| GDP_pc               | GDP per capita (of state)                   | €/cap      |
"
cat(tabl)
#missing data of year 2020 -> filter
data = data %>%
filter(Jahr < 2020)
rm(list=ls())
# Load relevant packages
library(tidyverse)
library(haven)
library(estimatr)
library(readxl)
library(plm)
library(stargazer)
library(Synth)
library(AER)
library(RCurl)
library(openxlsx)
# Read data from the computer (local)
data = read_excel("C:/Users/Andi Eckmann/Desktop/ETH Studium/MASTERSTUDIUM/2. Semester/Big Data for Public Policy/big_data_policy_2020/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx")
# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
summary(data)
rm(list=ls())
# Load relevant packages
library(tidyverse)
library(haven)
library(estimatr)
library(readxl)
library(plm)
library(stargazer)
library(Synth)
library(AER)
library(RCurl)
library(openxlsx)
# Read data from the computer (local)
data = read_excel("C:/Users/Andi Eckmann/Desktop/ETH Studium/MASTERSTUDIUM/2. Semester/Big Data for Public Policy/big_data_policy_2020/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx")
# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
summary(data)
tabl <- "
| Variable             | Description                                 | Unit       |
|----------------------|---------------------------------------------|------------|
| Jahr                 | Year                                        | -          |
| Bundesland           | State                                       | -          |
| Installed_Cap        | Installed PV Capacity                       | kW         |
| Cum_Installed_cap    | Cumulative installed PV Capacity            | kW         |
| module_cost          | Avg. cost per PV module                     | €2016/Wp   |
| feed-in              | National feed-in Tariff                     | ct/kWh     |
| population           | Population of state                         | people     |
| area                 | Area of state                               | km2        |
| log_area             | LOG Area of state                           | -          |
| GDP                  | GDP of state                                | m€         |
| Installed_Cap_pa     | Installed PV Capacity per area              | kW/km2     |
| Cum_Installed_Cap_pa | Cumulative installed PV Capacity per area   | kW/km2     |
| Installed_Cap_pc     | Installed PV Capacity per capita            | kW/cap     |
| Cum_Installed_Cap_pc | Cumulative installed PV Capacity per capita | kW/cap     |
| pop_densityed_Cap_pc | Population density                          | cap/km2    |
| GDP_pc               | GDP per capita (of state)                   | €/cap      |
"
cat(tabl)
#missing data of year 2020 -> filter
data = data %>%
filter(Jahr < 2020)
rm(list=ls())
# Load relevant packages
library(tidyverse)
library(haven)
library(estimatr)
library(readxl)
library(plm)
library(stargazer)
library(Synth)
library(AER)
library(RCurl)
library(openxlsx)
# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
summary(data)
#missing data of year 2020 -> filter
data = data %>%
filter(Jahr < 2020)
#missing data of year 2020 -> filter
data = data %>%
filter(Year < 2020)
attach(data)
#Overwiev
str(data)
dim(data)
data[1:16,1:4]
ggplot(data = data) +
geom_line(mapping = aes(x = Year, y = Installed_Cap, linetype = Bundesland, color= Bundesland),
show.legend = TRUE)
ggplot(data = data) +
geom_line(mapping = aes(x = Year, y = cum_installed_cap, linetype = Bundesland, color= Bundesland),
show.legend = TRUE)
ggplot(data = data) +
geom_line(mapping = aes(x = Year, y = Cum_Installed_Cap, linetype = Bundesland, color= Bundesland),
show.legend = TRUE)
ggplot(data = data) +
geom_line(mapping = aes(x = Year, y = Cum_Installed_Cap_pc, linetype = Bundesland, color= Bundesland),
show.legend = TRUE)
plot(`feed-in`, Installed_Cap_pc, col="blue", xlab = "feed-in [ct/kWh]", ylab="Installed_cap_pc [kW/cap]")
abline(model_ols, col=3, lwd=3)
model_ols = lm(Installed_Cap_pc ~ `feed-in`)
coeftest(model_ols)
plot(`feed-in`, Installed_Cap_pc, col="blue", xlab = "feed-in [ct/kWh]", ylab="Installed_cap_pc [kW/cap]")
abline(model_ols, col=3, lwd=3)
Installed_Cap_pc_predict_ols = predict(model_ols)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_ols, color = Bundesland),
show.legend = FALSE)
model_state = lm(Installed_Cap_pc ~ `feed-in` + Bundesland)
summary(model_state)
Installed_Cap_pc_predict_state = predict(model_state)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_state, color = Bundesland),
show.legend = TRUE)
Installed_Cap_pc_predict_state = predict(model_state)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_state, color = Bundesland),
show.legend = TRUE)
Installed_Cap_pc_predict_ols = predict(model_ols)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_ols, color = Bundesland),
show.legend = FALSE)
# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
summary(data)
#missing data of year 2020 -> filter
data = data %>%
filter(Year < 2020 && Year >= 1992)
attach(data)
# Load the csv data from my online repository
urlfile = 'https://raw.githubusercontent.com/eckmanna/big_data_policy_2020/master/course_project/data/cum_and_ann_installed_cap_bundesland.xlsx'
data = read.xlsx(urlfile)
summary(data)
#missing data of year 2020 -> filter
data = data %>%
filter(Year < 2020 & Year >= 1992)
attach(data)
model_ols = lm(Installed_Cap_pc ~ `feed-in`)
coeftest(model_ols)
plot(`feed-in`, Installed_Cap_pc, col="blue", xlab = "feed-in [ct/kWh]", ylab="Installed_cap_pc [kW/cap]")
abline(model_ols, col=3, lwd=3)
Installed_Cap_pc_predict_ols = predict(model_ols)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_ols, color = Bundesland),
show.legend = FALSE)
model_state = lm(Installed_Cap_pc ~ `feed-in` + Bundesland)
summary(model_state)
Installed_Cap_pc_predict_state = predict(model_state)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_state, color = Bundesland),
show.legend = TRUE)
model_fe = plm(Installed_Cap_pc ~ `feed-in`,
data = data,
index = c("Bundesland", "Jahr"),
model = "within") #within = fixed effects
model_fe = plm(Installed_Cap_pc ~ `feed-in`,
data = data,
index = c("Bundesland", "Year"),
model = "within") #within = fixed effects
summary(model_fe)
coeftest(model_fe, vcov. = vcovHC, type = "HC1")
rob_se <- list(sqrt(diag(vcovHC(model_ols, type = "HC1"))),
sqrt(diag(vcovHC(model_state, type = "HC1"))),
sqrt(diag(vcovHC(model_fe, type = "HC1"))))
stargazer(model_ols, model_state, model_fe,
digits = 3,
type = "text",
keep=c("feed-in"),
out="myfile",
out.header=FALSE,
header = FALSE,
se = rob_se,
model.numbers = FALSE,
column.labels = c("OLS", "with state dummies", "FE model"))
model_year = lm(Installed_Cap_pc ~ `feed-in` + as.factor(Jahr))
# estimate the state and year fixed effects regression with plm()
model_plm = plm(Installed_Cap_pc ~ `feed-in`,
data = data,
index = c("Bundesland", "Year"),
model = "within",
effect = "twoways")
summary(model_plm)
Installed_Cap_pc_predict_plm = predict(model_plm)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_plm, color = Bundesland),
show.legend = TRUE)
model_state_year = lm(Installed_Cap_pc ~ `feed-in` + as.factor(Bundesland) + as.factor(Jahr))
model_state_year_2 = plm(Installed_Cap_pc ~ `feed-in`+as.factor(Jahr),
data = data,
index = c("Bundesland", "Jahr"),
model = "within") #within = fixed effects
model_state_year_2 = plm(Installed_Cap_pc ~ `feed-in`+as.factor(Jahr),
data = data,
index = c("Bundesland", "Year"),
model = "within") #within = fixed effects
model_state_year = lm(Installed_Cap_pc ~ `feed-in` + as.factor(Bundesland) + as.factor(Year))
summary(model_state_year)
model_state_year_2 = plm(Installed_Cap_pc ~ `feed-in`+as.factor(Year),
data = data,
index = c("Bundesland", "Year"),
model = "within") #within = fixed effects
summary(model_state_year_2)
Installed_Cap_pc_predict_state_year = predict(model_state_year)
ggplot(data = data) +
geom_line(mapping = aes(x = `feed-in`, y = Installed_Cap_pc_predict_state_year, color = Bundesland),
show.legend = TRUE)
